{"version":3,"sources":["actions/login.js","utils/commonConstants.js","utils/api.js","utils/userHelper.js","components/input/index.jsx","components/pageloader/index.jsx","utils/store/index.js","components/PwaModal/index.jsx","components/Overlay/index.jsx","pages/login/index.jsx","utils/index.js","pages/register/index.jsx","actions/register.js","components/header/index.jsx","pages/home/index.jsx","pages/home/DummyHome.jsx","pages/resetPass/index.jsx","Routes.jsx","reducer/loginUser.js","utils/store/combineReducer.js","utils/store/contextProvider.js","App.js","serviceWorker.js","index.js"],"names":["getLoginUserSuccess","userData","console","log","type","data","LOGIN_API_URL","process","REGISTER_API_URL","FORGOT_PASS_API_URL","RESET_PASS_API_URL","postCall","url","contentType","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","res","status","json","catch","e","setRegisterResp","setValidatObj","setLoading","a","loginResponseStatus","loginId","setLoginResp","password","username","setResetResp","setResetPassResp","wrongUrl","Input","props","label","inputContainerClass","className","name","value","onChange","hasError","errMsg","ref","onFocus","hideStrengthBar","strengthPass","htmlFor","Pageloader","classNames","title","message","defaultProps","Store","createContext","ContextProvider","Provider","PwaModal","primaryButton","secondaryButton","bottom","classes","classnames","children","onClick","onPrimaryAction","onSecondaryAction","Overlay","style","backgroundColor","LoginPage","useContext","dispatch","useState","userDetails","setUserDetails","loading","submitted","setSubmitted","validateObj","loginResp","resetResp","passwordRef","useRef","userNameRef","useEffect","Storage","parse","sessionStorage","getItem","email","history","push","handleChange","target","to","onSubmit","preventDefault","loginUser","userDocument","forgotPass","validatePassword","firstName","includes","test","RegisterPage","lastName","setStrengthPass","registerResp","event","registerUser","Header","appStore","user","loginStatus","removeItem","Home","DummyHome","ResetPass","password2","resetPassResp","p","o","resetPass","token","reduce","xs","x","Routes","verifiedUser","setVerifiedUser","window","prompt","exact","path","component","Login","Register","state","action","newState","submission","setItem","mainReducer","initialState","loginReducer","StoreProvider","useReducer","reducer","App","basename","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fcb36fa5.chunk.js","sourcesContent":["export const GET_LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const RESET_LOGIN_USER = \"RESET_LOGIN_USER\";\n\n\nexport const getLoginUserSuccess = userData => {\n\tconsole.log(\"getLoginUserSuccess\");\n\treturn {\n\t\ttype: GET_LOGIN_USER_SUCCESS,\n\t\tdata: userData\n\t};\n};\nexport const resetLoginUser = () => ({\n\ttype: RESET_LOGIN_USER\n});","export const LOGIN_API_URL = `${process.env.REACT_APP_PUBLIC_URL}/login`;\nexport const REGISTER_API_URL = `${process.env.REACT_APP_PUBLIC_URL}/register`;\nexport const FORGOT_PASS_API_URL = `${process.env.REACT_APP_PUBLIC_URL}/forgotpassword`;\nexport const RESET_PASS_API_URL = `${process.env.REACT_APP_PUBLIC_URL}/resetpassword`;\n\nexport const HTTP_STATUS_FOR_SUCCESS = \"SUCCESS\";\nexport const LOGIN_RESPONSE_STATUS_FOR_SUCCESS = \"SUCCESS\";\nexport const LOGIN_RESPONSE_STATUS_FOR_WRONG_PASS = \"UN_AUTHORIZED\";\nexport const LOGIN_RESPONSE_STATUS_FOR_WRONG_ID = \"INVALID_USER\";\nexport const REGISTER_RESPONSE_STATUS_FOR_SUCCESS = \"SUCCESS\";\nexport const REGISTER_RESPONSE_STATUS_EXISTING_ID = \"INVALID_REQUEST\";\nexport const RESET_PASS_RESPONSE_STATUS_FOR_WRONG_URL = \"INVALID_URL\";\n\nexport const DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];","export const getData = (url, params = {}) => {\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${url}`).then((res) => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\treject({});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tres.json().then((data) => {\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t}).catch((e) => {\n\t\t\tconsole.log(\"ERROR\", e);\n\t\t\treject(e);\n\t\t});\n\t});\n};\n\nexport const postCall = (url, data, contentType = \"application/json\") => {\n\tconsole.log(\"postCall\", url, data, contentType);\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${url}`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": contentType\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}).then(res => {\n\t\t\tconsole.log(\"response\", res);\n\t\t\tif (res.status >= 400) {\n\t\t\t\treject({res});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tres.json().then((data) => {\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t}).catch((e) => {\n\t\t\tconsole.log(\"ERROR\", e);\n\t\t\treject(e);\n\t\t});\n\t});\n};","import {\n  REGISTER_API_URL,\n  REGISTER_RESPONSE_STATUS_FOR_SUCCESS,\n  REGISTER_RESPONSE_STATUS_EXISTING_ID,\n  LOGIN_API_URL,\n  LOGIN_RESPONSE_STATUS_FOR_SUCCESS,\n  LOGIN_RESPONSE_STATUS_FOR_WRONG_PASS,\n  LOGIN_RESPONSE_STATUS_FOR_WRONG_ID,\n  FORGOT_PASS_API_URL,\n  RESET_PASS_API_URL,\n  HTTP_STATUS_FOR_SUCCESS,\n  RESET_PASS_RESPONSE_STATUS_FOR_WRONG_URL\n} from \"./commonConstants\";\nimport { postCall } from \"./api\";\nexport async function registerUser(\n  userData,\n  setRegisterResp,\n  setValidatObj,\n  setLoading\n) {\n  try {\n    console.log(\"registerUser\", userData);\n    const data = await postCall(REGISTER_API_URL, userData);\n    setLoading(false)\n    const { loginResponseStatus } = data || {};\n    if (loginResponseStatus === REGISTER_RESPONSE_STATUS_FOR_SUCCESS) {\n      setRegisterResp(data.userData);\n    } else if (loginResponseStatus === REGISTER_RESPONSE_STATUS_EXISTING_ID) {\n      setValidatObj({loginId: true})\n    }\n  } catch (e) {\n    setLoading(false)\n    console.log(\"API ERROR\", e);\n  }\n}\n\nexport async function loginUser(\n  userData,\n  setLoginResp,\n  setValidatObj,\n  setLoading\n) {\n  try {\n    console.log(\"loginUser\", userData);\n    const data = await postCall(LOGIN_API_URL, userData);\n    setLoading(false)\n    const { loginResponseStatus } = data || {};\n    console.log(data);\n    if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_SUCCESS) {\n      setLoginResp(data.userData);\n    } else if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_WRONG_PASS) {\n      setValidatObj({password: true})\n    } else if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_WRONG_ID) {\n      setValidatObj({username: true})\n    }\n  } catch (e) {\n    setLoading(false)\n    console.log(\"API ERROR\", e);\n  }\n}\n\nexport async function forgotPass(\n  userData,\n  setResetResp,\n  setValidatObj,\n  setLoading\n) {\n  try {\n    console.log(\"registerUser\", userData);\n    const data = await postCall(FORGOT_PASS_API_URL, userData);\n    setLoading(false)\n    const { loginResponseStatus } = data || {};\n    if (loginResponseStatus === HTTP_STATUS_FOR_SUCCESS) {\n      setResetResp(data.userData);\n    }else if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_WRONG_ID) {\n      setValidatObj({username: true})\n    }\n  } catch (e) {\n    setLoading(false)\n    console.log(\"API ERROR\", e);\n  }\n}\n\nexport async function resetPass(\n  userData,\n  setResetPassResp,\n  setValidatObj,\n  setLoading\n) {\n  try {\n    console.log(\"registerUser\", userData);\n    const data = await postCall(RESET_PASS_API_URL, userData);\n    setLoading(false)\n    const { loginResponseStatus } = data || {};\n    if (loginResponseStatus === HTTP_STATUS_FOR_SUCCESS) {\n      setResetPassResp(data.userData);\n    }else if (loginResponseStatus === RESET_PASS_RESPONSE_STATUS_FOR_WRONG_URL) {\n      setValidatObj({wrongUrl: true})\n    }\n  } catch (e) {\n    setLoading(false)\n    console.log(\"API ERROR\", e);\n  }\n}","import React from \"react\";\n\nconst Input = (props)=>{\n\tconst{\n\t\tlabel,\n\t\ttype,\n\t\tinputContainerClass,\n\t\tclassName,\n\t\tname,\n\t\tvalue,\n\t\tonChange,\n\t\thasError,\n\t\terrMsg,\n\t\tref,\n\t\tonFocus,\n\t\thideStrengthBar,\n\t\tstrengthPass\n\t} = props;\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\t`${inputContainerClass} ${hasError ? \" has-error\" : \"\"}`\n\t\t\t}\n\t\t>\n\t\t\t<label htmlFor={name} className=\"form-label\">\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tref={ref || null}\n\t\t\t\ttype={type}\n\t\t\t\tclassName={className}\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonFocus={onFocus || null}\n\t\t\t/>\n\t\t\t{hasError && (\n\t\t\t\t<div className=\"help-block\">{errMsg}</div>\n\t\t\t)}\n\t\t\t{!hideStrengthBar && type === \"password\" && value && (\n\t\t\t\t<div className=\"strengthBarContainer mt-4\">\n\t\t\t\t\t<div className={`strengthBar ${strengthPass} br-20`}></div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nconst Pageloader = (props) => {\n    return (\n      <div className={classNames(\"Pageloader\", props.className)}>\n        <div className=\"Pageloader__content\">\n          <div className=\"Pageloader__spinner\" />\n          <h5 className=\"Pageloader__heading primary-text-color\">{props.title}</h5>\n          <p className=\"Pageloader__text\">{props.message}</p>\n        </div>\n      </div>\n    )\n}\n\nPageloader.propTypes = {\n  message: PropTypes.string,\n  title: PropTypes.string,\n  className: PropTypes.string\n}\n\nPageloader.defaultProps = {\n  message: 'loading...',\n  title: '',\n  className: ''\n}\n\nexport default Pageloader\n","import {createContext} from 'react'\n\nconst Store = createContext({});\n\nexport const ContextProvider = Store.Provider;\n\nexport default Store;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from \"classnames\";\n\nconst PwaModal = (props) => {\n  const _handlePrimaryAction = () => {\n    props.onPrimaryAction()\n  }\n\n  const _handleSecondaryAction = () => {\n    props.onSecondaryAction()\n  }\n    const { type, primaryButton, secondaryButton, bottom, className } = props\n    const classes = classnames(\n      className\n    )\n    return (\n      <>\n      <div className={\"PwaModal \" + (bottom ? \"w-100p p-absolute b-0 PwaModal__bottom \" : \"\") + classes}>\n        <div className={\"PwaModal__content \" + (type === 'renderProp' ?  'pt-0 pb-0 pl-0 pr-0' : '')} >\n          {type !== 'renderProp'?\n            <h1 className=\"PwaModal__heading\">{props.title}</h1>\n            :''\n          }\n          { type==='renderProp' ? props.children :\n            ( <p className=\"PwaModal__copy\">{props.message}</p> )}\n        </div>\n          <div className=\"PwaModal__actions\">\n          {primaryButton &&\n            <a\n              className=\"PwaModal__action PwaModal__action--primary\"\n              onClick={_handlePrimaryAction}\n            >\n              {primaryButton}\n            </a>\n          }\n          {secondaryButton &&\n            <a className=\"PwaModal__action\" onClick={_handleSecondaryAction}>\n              {secondaryButton}\n            </a>\n          }\n        </div> \n      </div>\n      </>\n    )\n  }\n\n  PwaModal.propTypes = {\n    onPrimaryAction: PropTypes.func,\n    onSecondaryAction: PropTypes.func,\n    title: PropTypes.string,\n    message: PropTypes.string,\n    type: PropTypes.oneOf(['info', 'warning', 'error', 'renderProp', 'caution', 'success','failed']),\n    primaryButton: PropTypes.string,\n    bottom: PropTypes.bool,\n    secondaryButton: PropTypes.string,\n  }\nPwaModal.defaultProps = {\n  type: 'info',\n  onPrimaryAction: () => {},\n  onSecondaryAction: () => {},\n  title: '',\n  message: '',\n  primaryButton: '',\n  secondaryButton: '',\n  bottom : false\n}\n\nexport default PwaModal\n","import React, { useRef, useEffect } from \"react\";\nimport classNames from \"classnames\";\n\nconst Overlay = ({ className, children }) => {\n  return (\n    <div\n      className={classNames(\n        \"p-fixed l-0 r-0 b-0 t-0 flex flex-center flex-middle z-10\",\n        className\n      )}\n      style={{\n        backgroundColor: \"rgba(0, 0, 0,0.2)\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Overlay;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { resetLoginUser, getLoginUserSuccess } from \"../../actions/login\";\nimport { loginUser, forgotPass } from \"../../utils/userHelper\";\nimport Input from \"../../components/input\";\nimport Pageloader from \"../../components/pageloader\";\nimport Store from \"../../utils/store\";\nimport PwaModal from \"../../components/PwaModal\";\nimport Overlay from \"../../components/Overlay\";\n\nconst LoginPage = (props) => {\n  const [, dispatch] = useContext(Store);\n  const [userDetails, setUserDetails] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [validateObj, setValidatObj] = useState({\n    username: false,\n    password: false,\n  });\n  const [loginResp, setLoginResp] = useState(null);\n  const [resetResp, setResetResp] = useState(null);\n  const passwordRef = useRef(null);\n  const userNameRef = useRef(null);\n  useEffect(() => {\n    let userData = null;\n    if (typeof Storage !== \"undefined\") {\n      userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    }\n    const { email } = userData || {};\n    if (email) {\n      props.history.push(\"/\");\n    }\n  }, [props.history]);\n  useEffect(() => {\n    if (loginResp) {\n      dispatch(getLoginUserSuccess(loginResp));\n      props.history.push(\"/\");\n    }\n  }, [loginResp]);\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserDetails({ ...userDetails, [name]: value });\n    setValidatObj({ ...validateObj, [name]: false });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    const { username, password } = userDetails;\n    setValidatObj({\n      username: !username,\n      password: !password,\n    });\n    if (username && password) {\n      setLoading(true);\n      const userData = {\n        userDocument: { loginId: username, password: password },\n      };\n      loginUser(userData, setLoginResp, setValidatObj, setLoading);\n    }\n  };\n  const handleForgotPass = () => {\n    setLoading(true);\n    setSubmitted(true);\n    setValidatObj({\n      username: !userDetails.username,\n    });\n    const userData = {\n      userDocument: { loginId: userDetails.username },\n    };\n    forgotPass(userData, setResetResp, setValidatObj, setLoading);\n  };\n  const handelModalClose = () => {\n    setResetResp(null);\n    setSubmitted(false);\n  };\n  const resetLogin = () => {\n    resetLoginUser();\n  };\n  return (\n    <>\n      {loading && <Pageloader className=\"o-70\" />}\n      {!loading && resetResp && (\n        <Overlay>\n          <PwaModal\n            title={\"Mail sent\"}\n            onPrimaryAction={handelModalClose}\n            primaryButton=\"ok\"\n            message={`An email sent to ${resetResp.email} with reset password link`}\n          />\n        </Overlay>\n      )}\n      <div className=\"pr-16 pl-16 wt-90p hCenter p-relative max-wt-500\">\n        <div className=\"flex flex-middle flex-between\">\n          <h2>Login</h2>\n          <Link\n            to=\"/register\"\n            onClick={resetLogin}\n            className=\"btn btn-link decoration-none\"\n          >\n            Register\n          </Link>\n        </div>\n        <form name=\"form\" onSubmit={handleSubmit}>\n          <Input\n            label=\"Email Id\"\n            type=\"email\"\n            ref={userNameRef}\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"username\"\n            value={userDetails.username}\n            onChange={handleChange}\n            hasError={validateObj.username}\n            errMsg={\n              submitted && !userDetails.username\n                ? \"Email id is required\"\n                : \"Not a Registered user Register now\"\n            }\n          />\n          <Input\n            label=\"Password\"\n            type=\"password\"\n            ref={passwordRef}\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"password\"\n            value={userDetails.password}\n            onChange={handleChange}\n            hasError={validateObj.password}\n            errMsg={\n              submitted && !userDetails.password\n                ? \"Password is required\"\n                : \"Password did not matched with Email Id\"\n            }\n            hideStrengthBar={true}\n          />\n          <div className=\"flex flex-right\" onClick={handleForgotPass}>\n            <div className=\"btn btn-link decoration-none c-pointer pt-0 pb-0\">\n              forgot Password?\n            </div>\n          </div>\n          <div className=\"mb-16\">\n            <button className=\"btn btn-primary\">Login</button>\n            <Link to=\"/\" className=\"btn btn-link decoration-none\">\n              cancel\n            </Link>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n","\nexport const validatePassword = (password, firstName, loginId) => {\n\tconst strongRegex = /^(?=.*[\\d])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&])[\\w!@#$%^&*]{8,}$/;\n\tconst normalRegex = /^(?=.*[\\d])(?=.*[a-z])(?=.*[!@#$%^&])[\\w!@#$%^&*]{6,}$/;\n\tif (firstName && password.includes(firstName)) {\n\t\treturn \"weak\";\n\t}\n\tif (loginId && password.includes(loginId)) {\n\t\treturn \"weak\";\n\t}\n\tif (strongRegex.test(password)) {\n\t\treturn \"strong\";\n\t}\n\tif (normalRegex.test(password)) {\n\t\treturn \"normal\";\n\t}\n\treturn \"weak\";\n};\n\nexport const isValidDate = (date) => {\n\tif (!date || typeof(date) !== \"string\") {\n\t\treturn false;\n\t} else if (isNaN(new Date(date).getTime())) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const path = (p, o) => {\n\tconst reducerFunction = (xs, x) => {\n\t\treturn xs && xs[x] ? xs[x] : null;\n\t};\n\treturn p.reduce(reducerFunction, o);\n};","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getRegisterUserSuccess } from \"../../actions/register\";\nimport { validatePassword } from \"../../utils\";\nimport { registerUser } from \"../../utils/userHelper\";\nimport Input from \"../../components/input\";\nimport Store from \"../../utils/store\";\nimport Pageloader from \"../../components/pageloader\"\nconst RegisterPage = (props) => {\n  const [, dispatch] = useContext(Store);\n  const [userDetails, setUserDetails] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    loginId: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [strengthPass, setStrengthPass] = useState(\"\");\n  const [registerResp, setRegisterResp] = useState(null);\n  const [validateObj, setValidatObj] = useState({\n    firstName: false,\n    lastName: false,\n    loginId: false,\n    password: false,\n  });\n  const [loading, setLoading] = useState(false);\n\n  const passwordRef = useRef(null);\n\n  useEffect(() => {\n    let userData = null;\n    if (typeof Storage !== \"undefined\") {\n      userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    }\n    const { email } = userData || {};\n    if (email) {\n      props.history.push(\"/\");\n    }\n  }, [props.history]);\n\n  useEffect(() => {\n    if (registerResp) {\n      dispatch(getRegisterUserSuccess(registerResp));\n      props.history.push(\"/\");\n    }\n  }, [registerResp]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"password\") {\n      const strengthPass = validatePassword(\n        value,\n        userDetails.firstName,\n        userDetails.loginId\n      );\n      setStrengthPass(strengthPass);\n    }\n    setValidatObj({ ...validateObj, [name]: false });\n    setUserDetails({ ...userDetails, [name]: value });\n    submitted && setSubmitted(false);\n    console.log(strengthPass);\n  };\n\n  const passwordFocused = () => {\n    console.log(\"passwordFocused\");\n    setStrengthPass(strengthPass || \"weak\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitted(true);\n    setValidatObj({\n      firstName: !userDetails.firstName,\n      lastName: false,\n      loginId: !userDetails.loginId,\n      password: !userDetails.password,\n    });\n    if (userDetails.firstName && userDetails.loginId && userDetails.password) {\n      setLoading(true);\n      const userData = { userDocument: userDetails };\n      registerUser(userData, setRegisterResp, setValidatObj, setLoading);\n    }\n  };\n  return (\n    <>\n      {loading && <Pageloader className=\"o-70\" />}\n      <div className=\"pr-16 pl-16 wt-90p hCenter p-relative max-wt-500\">\n        <div className=\"flex flex-middle flex-between\">\n          <h2>Register</h2>\n          <Link to=\"/login\" className=\"btn btn-link decoration-none\">\n            {\" \"}\n            LogIn\n          </Link>\n        </div>\n\n        <form name=\"form\" onSubmit={handleSubmit}>\n          <Input\n            label=\"First Name\"\n            type=\"text\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"firstName\"\n            value={userDetails.firstName}\n            onChange={handleChange}\n            hasError={validateObj.firstName}\n            errMsg=\"First Name is required\"\n          />\n          <Input\n            label=\"Last Name\"\n            type=\"text\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"lastName\"\n            value={userDetails.lastName}\n            onChange={handleChange}\n          />\n          <Input\n            label=\"Email Id\"\n            type=\"email\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"loginId\"\n            value={userDetails.loginId}\n            onChange={handleChange}\n            hasError={validateObj.loginId}\n            errMsg={\n              submitted && !userDetails.loginId\n                ? \"Email id is required\"\n                : \"Already have an id login now\"\n            }\n          />\n          <Input\n            ref={passwordRef}\n            label=\"Password\"\n            type=\"password\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"password\"\n            value={userDetails.password}\n            onChange={handleChange}\n            hasError={validateObj.password}\n            onFocus={passwordFocused}\n            errMsg=\"Password is required\"\n            strengthPass={strengthPass}\n          />\n          <div className=\"mb-16\">\n            <button className=\"btn btn-primary\">Register</button>\n            <Link to=\"/\" className=\"btn btn-link decoration-none\">\n              Cancel\n            </Link>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterPage;\n","export const GET_REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\n\nexport const getRegisterUserSuccess = userData => {\n\tconsole.log(\"getRegisterUserSuccess\");\n\treturn {\n\t\ttype: GET_REGISTER_USER_SUCCESS,\n\t\tdata: userData\n\t};\n};","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Store from \"../../utils/store\";\nimport { resetLoginUser } from \"../../actions/login\";\n\nconst Header = () => {\n  const [appStore, dispatch] = useContext(Store);\n  const {\n    user: { loginStatus, data: userDetails },\n  } = appStore;\n\n  const handleLogout = () => {\n    if (typeof Storage !== \"undefined\") {\n      sessionStorage.removeItem(\"userData\");\n    }\n    dispatch(resetLoginUser());\n  };\n  return (\n    <div className=\"header\">\n      {!loginStatus ? (\n        <>\n          <Link\n            className=\"pl-16 pr-16 c-light-blue decoration-none\"\n            to=\"/login\"\n          >\n            Login\n          </Link>\n          <Link className=\"pr-16 c-light-blue decoration-none\" to=\"/register\">\n            Register\n          </Link>\n        </>\n      ) : (\n        <>\n          <div className=\"pl-16 pr-16\">{userDetails.email}</div>\n          <div className=\"pr-16 c-pointer c-light-blue\" onClick={handleLogout}>\n            Logout\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Store from \"../../utils/store\";\nimport Header from \"../../components/header\";\nconst Home = () => {\n  const [appStore] = useContext(Store);\n  const {\n    user: { loginStatus, data: userDetails },\n  } = appStore;\n  return (\n    <>\n      <Header />\n      <div className=\"flex flex-center\">\n        <h1>\n          Hello{\" \"}\n          {loginStatus\n            ? userDetails.firstName + \" \" + userDetails.lastName\n            : \"anonymous\"}\n        </h1>\n      </div>\n      <h2 className=\"success-color t-center\">you are a verified user</h2>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useContext } from \"react\";\nimport Store from \"../../utils/store\";\nimport Header from \"../../components/header\";\n\nconst DummyHome = () => {\n  const [appStore] = useContext(Store);\n  const {\n    user: { loginStatus, data: userDetails },\n  } = appStore;\n  return (\n   <> \n      <Header />\n   <div className=\"flex flex-center\">\n      <h1>\n        Hello{\" \"}\n        {loginStatus\n          ? userDetails.firstName + \" \" + userDetails.lastName\n          : \"anonymous\"}\n      </h1>\n    </div></>\n  );\n};\n\nexport default DummyHome;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getRegisterUserSuccess } from \"../../actions/register\";\nimport { validatePassword } from \"../../utils\";\nimport { resetPass } from \"../../utils/userHelper\";\nimport Input from \"../../components/input\";\nimport Store from \"../../utils/store\";\nimport Pageloader from \"../../components/pageloader\";\nimport PwaModal from \"../../components/PwaModal\";\nimport Overlay from \"../../components/Overlay\";\nimport { path } from \"../../utils\";\n\nconst ResetPass = (props) => {\n  const [, dispatch] = useContext(Store);\n  const [userDetails, setUserDetails] = useState({\n    password: \"\",\n    password2: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [strengthPass, setStrengthPass] = useState(\"\");\n  const [resetPassResp, setResetPassResp] = useState(null);\n  const [validateObj, setValidatObj] = useState({\n    password: false,\n    password2: false,\n  });\n  const [loading, setLoading] = useState(false);\n\n  const passwordRef = useRef(null);\n\n  useEffect(() => {\n    let userData = null;\n    if (typeof Storage !== \"undefined\") {\n      userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    }\n    const { email } = userData || {};\n    if (email) {\n      props.history.push(\"/\");\n    }\n  }, [props.history]);\n\n  // useEffect(() => {\n  //   if (registerResp) {\n  //     dispatch(getRegisterUserSuccess(registerResp));\n  //     props.history.push(\"/\");\n  //   }\n  // }, [registerResp]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"password\") {\n      const strengthPass = validatePassword(value);\n      setStrengthPass(strengthPass);\n    }\n    setValidatObj({ ...validateObj, [name]: false });\n    setUserDetails({ ...userDetails, [name]: value });\n    submitted && setSubmitted(false);\n    console.log(strengthPass);\n  };\n\n  const passwordFocused = () => {\n    console.log(\"passwordFocused\");\n    setStrengthPass(strengthPass || \"weak\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitted(true);\n    setValidatObj({\n      password: !userDetails.password,\n      password2: userDetails.password !== userDetails.password2,\n    });\n    if (userDetails.password && userDetails.password === userDetails.password2) {\n      setLoading(true);\n      const userData = {\n        userDocument: {\n          password: userDetails.password,\n          token: path([\"match\", \"params\", \"token\"], props),\n        },\n      };\n      resetPass(userData, setResetPassResp, setValidatObj, setLoading);\n    }\n  };\n  return (\n    <>\n      {loading && <Pageloader className=\"o-70\" />}\n      {validateObj.wrongUrl && (\n        <Overlay>\n          <PwaModal\n            title={\"Wrong url\"}\n            type=\"Error\"\n            onPrimaryAction={() => {\n              props.history.push(\"/\");\n            }}\n            primaryButton=\"OK\"\n            message={`You hit the Wrong url. Go to Home Page`}\n          />\n        </Overlay>\n      )}\n      {resetPassResp && (\n        <Overlay>\n          <PwaModal\n            title={\"Password changed\"}\n            type=\"success\"\n            onPrimaryAction={() => {\n              props.history.push(\"/login\");\n            }}\n            primaryButton=\"OK\"\n            message={`Password changed Successfully Login now`}\n          />\n        </Overlay>\n      )}\n      <div className=\"pr-16 pl-16 wt-90p hCenter p-relative max-wt-500\">\n        <div className=\"flex flex-middle flex-between\">\n          <h2>Reset Password</h2>\n          <Link to=\"/login\" className=\"btn btn-link decoration-none\">\n            {\" \"}\n            LogIn\n          </Link>\n        </div>\n\n        <form name=\"form\" onSubmit={handleSubmit}>\n          <Input\n            ref={passwordRef}\n            label=\"New Password\"\n            type=\"password\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"password\"\n            value={userDetails.password}\n            onChange={handleChange}\n            hasError={validateObj.password}\n            onFocus={passwordFocused}\n            errMsg=\"Password is required\"\n            strengthPass={strengthPass}\n          />\n          <Input\n            ref={passwordRef}\n            label=\"Confirm New Password\"\n            type=\"password\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"password2\"\n            value={userDetails.password2}\n            onChange={handleChange}\n            hasError={validateObj.password2}\n            hideStrengthBar={true}\n            errMsg={\n              userDetails.password2\n                ? \"Please enter the same password as first one.\"\n                : \"This field is required.\"\n            }\n          />\n          <div className=\"mb-16\">\n            <button className=\"btn btn-primary\">Reset</button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default ResetPass;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"./styles/index.scss\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport HomePage from \"./pages/home\";\nimport DummyHomePage from \"./pages/home/DummyHome\";\nimport ResetPass from \"./pages/resetPass\";\nimport { getLoginUserSuccess } from \"./actions/login\";\nimport Store from \"./utils/store\";\n\nconst Routes = () => {\n  const [, dispatch] = useContext(Store);\n  const [verifiedUser, setVerifiedUser] = useState(false);\n  useEffect(() => {\n    let userData = null;\n    if (typeof Storage !== \"undefined\") {\n      userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    }\n    const { email } = userData || {};\n    if (email) {\n      dispatch(getLoginUserSuccess(userData));\n    }\n    setVerifiedUser(window.prompt(\"whats your key\", \"default\") === \"2665\");\n  }, []);\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        component={(props) =>\n          verifiedUser ? <HomePage {...props} /> : <DummyHomePage />\n        }\n      />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/register\" component={Register} />\n      <Route exact path=\"/resetPass/:token\" component={ResetPass} />\n    </Switch>\n  );\n};\nexport default Routes;\n","import {\n    GET_LOGIN_USER_SUCCESS,\n    RESET_LOGIN_USER\n} from \"../actions/login\";\nimport {\n    GET_REGISTER_USER_SUCCESS,\n} from \"../actions/register\";\nexport default (state, action) => {\n    let newState;\n    if (action.type === GET_LOGIN_USER_SUCCESS) {\n        newState = {\n            ...state,\n            loginStatus: true,\n            data: action.data,\n            submission: 'success'\n\n        }\n        if (typeof (Storage) !== \"undefined\") {\n            sessionStorage.setItem(\"userData\", JSON.stringify(action.data));\n        }\n    } else if (action.type === GET_REGISTER_USER_SUCCESS) {\n        newState = {\n            ...state,\n            loginStatus: true,\n            data: action.data,\n            submission: 'success'\n        }\n        if (typeof (Storage) !== \"undefined\") {\n            sessionStorage.setItem(\"userData\", JSON.stringify(action.data));\n        }\n    } else if (action.type === RESET_LOGIN_USER) {\n        newState = {\n            ...state,\n            loginStatus: false,\n        }\n    }\n    return newState || state;\n}","import loginReducer from \"../../reducer/loginUser.js\";\nconst mainReducer = (initialState, action)=>{\n\treturn({\n\t\tuser: loginReducer(initialState.user, action)\n\t});\n};\n\nexport default mainReducer;","import React,{useReducer} from \"react\";\nimport {ContextProvider} from \"./index\";\nimport reducer from \"./combineReducer\";\n\nconst initialState = {user:{} };\n\nconst StoreProvider = (props) =>{\n\treturn <ContextProvider value={useReducer(reducer, initialState)}>\n\t\t{props.children}\n\t</ContextProvider>;\n};\nexport default StoreProvider;","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport \"./styles/index.scss\";\nimport StoreProvider from \"./utils/store/contextProvider\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<HashRouter basename=\"/\">\n\t\t\t\t<StoreProvider>\n\n\t\t\t\t\t<Routes />\n\t\t\t\t</StoreProvider>\n\t\t\t</HashRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}