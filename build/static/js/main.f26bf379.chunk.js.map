{"version":3,"sources":["actions/login.js","utils/commonConstants.js","utils/api.js","utils/userHelper.js","components/input/index.jsx","utils/store/index.js","pages/login/index.jsx","pages/register/index.jsx","actions/register.js","utils/index.js","pages/home/index.jsx","Routes.jsx","reducer/loginUser.js","utils/store/combineReducer.js","utils/store/contextProvider.js","App.js","serviceWorker.js","index.js"],"names":["getLoginUserSuccess","userData","console","log","type","data","LOGIN_API_URL","process","REGISTER_API_URL","postCall","url","contentType","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","res","status","json","catch","e","setRegisterResp","setValidatObj","a","loginResponseStatus","loginId","setLoginResp","password","username","Input","props","label","inputContainerClass","className","name","value","onChange","hasError","errMsg","ref","onFocus","hideStrengthBar","strengthPass","htmlFor","Store","createContext","ContextProvider","Provider","LoginPage","useContext","dispatch","useState","userDetails","setUserDetails","submitted","setSubmitted","validateObj","loginResp","passwordRef","useRef","userNameRef","useEffect","Storage","parse","sessionStorage","getItem","email","history","push","handleChange","target","to","onClick","onSubmit","preventDefault","loginUser","userDocument","RegisterPage","firstName","lastName","setStrengthPass","registerResp","event","includes","test","registerUser","Home","appStore","undefined","Routes","exact","path","component","HomePage","Login","Register","state","action","newState","loginStatus","submission","setItem","mainReducer","initialState","user","loginReducer","StoreProvider","useReducer","reducer","children","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f26bf379.chunk.js","sourcesContent":["export const GET_LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\nexport const RESET_LOGIN_USER = \"RESET_LOGIN_USER\";\n\n\nexport const getLoginUserSuccess = userData => {\n\tconsole.log(\"getLoginUserSuccess\");\n\treturn {\n\t\ttype: GET_LOGIN_USER_SUCCESS,\n\t\tdata: userData\n\t};\n};\nexport const resetLoginUser = () => ({\n\ttype: RESET_LOGIN_USER\n});","export const LOGIN_API_URL = `${process.env.REACT_APP_PUBLIC_URL}/login`;\nexport const REGISTER_API_URL = `${process.env.REACT_APP_PUBLIC_URL}/register`;\n\nexport const HTTP_STATUS_FOR_SUCCESS = \"SUCCESS\";\nexport const LOGIN_RESPONSE_STATUS_FOR_SUCCESS = \"SUCCESS\";\nexport const LOGIN_RESPONSE_STATUS_FOR_WRONG_PASS = \"UN_AUTHORIZED\";\nexport const LOGIN_RESPONSE_STATUS_FOR_WRONG_ID = \"INVALID_USER\";\nexport const REGISTER_RESPONSE_STATUS_FOR_SUCCESS = \"SUCCESS\";\nexport const REGISTER_RESPONSE_STATUS_EXISTING_ID = \"INVALID_REQUEST\";\n\nexport const DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nexport const MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];","export const getData = (url, params = {}) => {\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${url}`).then((res) => {\n\t\t\tif (res.status >= 400) {\n\t\t\t\treject({});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tres.json().then((data) => {\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t}).catch((e) => {\n\t\t\tconsole.log(\"ERROR\", e);\n\t\t\treject(e);\n\t\t});\n\t});\n};\n\nexport const postCall = (url, data, contentType = \"application/json\") => {\n\tconsole.log(\"postCall\", url, data, contentType);\n\treturn new Promise((resolve, reject) => {\n\t\tfetch(`${url}`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": contentType\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}).then(res => {\n\t\t\tconsole.log(\"response\", res);\n\t\t\tif (res.status >= 400) {\n\t\t\t\treject({res});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tres.json().then((data) => {\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t}).catch((e) => {\n\t\t\tconsole.log(\"ERROR\", e);\n\t\t\treject(e);\n\t\t});\n\t});\n};","import {\n  REGISTER_API_URL,\n  REGISTER_RESPONSE_STATUS_FOR_SUCCESS,\n  REGISTER_RESPONSE_STATUS_EXISTING_ID,\n  LOGIN_API_URL,\n  LOGIN_RESPONSE_STATUS_FOR_SUCCESS,\n  LOGIN_RESPONSE_STATUS_FOR_WRONG_PASS,\n  LOGIN_RESPONSE_STATUS_FOR_WRONG_ID,\n} from \"./commonConstants\";\nimport { postCall } from \"./api\";\nexport async function registerUser(\n  userData,\n  setRegisterResp,\n  setValidatObj\n) {\n  try {\n    console.log(\"registerUser\", userData);\n    const data = await postCall(REGISTER_API_URL, userData);\n    const { loginResponseStatus } = data || {};\n    if (loginResponseStatus === REGISTER_RESPONSE_STATUS_FOR_SUCCESS) {\n      setRegisterResp(data.userData);\n    } else if (loginResponseStatus === REGISTER_RESPONSE_STATUS_EXISTING_ID) {\n      setValidatObj({loginId: true})\n    }\n  } catch (e) {\n    console.log(\"API ERROR\", e);\n  }\n}\n\nexport async function loginUser(\n  userData,\n  setLoginResp,\n  setValidatObj\n) {\n  try {\n    console.log(\"loginUser\", userData);\n    const data = await postCall(LOGIN_API_URL, userData);\n    const { loginResponseStatus } = data || {};\n    console.log(data);\n    if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_SUCCESS) {\n      setLoginResp(data.userData);\n    } else if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_WRONG_PASS) {\n      setValidatObj({password: true})\n    } else if (loginResponseStatus === LOGIN_RESPONSE_STATUS_FOR_WRONG_ID) {\n      setValidatObj({username: true})\n    }\n  } catch (e) {\n    console.log(\"API ERROR\", e);\n  }\n}\n","import React from \"react\";\n\nconst Input = (props)=>{\n\tconst{\n\t\tlabel,\n\t\ttype,\n\t\tinputContainerClass,\n\t\tclassName,\n\t\tname,\n\t\tvalue,\n\t\tonChange,\n\t\thasError,\n\t\terrMsg,\n\t\tref,\n\t\tonFocus,\n\t\thideStrengthBar,\n\t\tstrengthPass\n\t} = props;\n\treturn (\n\t\t<div\n\t\t\tclassName={\n\t\t\t\t`${inputContainerClass} ${hasError ? \" has-error\" : \"\"}`\n\t\t\t}\n\t\t>\n\t\t\t<label htmlFor={name} className=\"form-label\">\n\t\t\t\t{label}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tref={ref || null}\n\t\t\t\ttype={type}\n\t\t\t\tclassName={className}\n\t\t\t\tname={name}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={onChange}\n\t\t\t\tonFocus={onFocus || null}\n\t\t\t/>\n\t\t\t{hasError && (\n\t\t\t\t<div className=\"help-block\">{errMsg}</div>\n\t\t\t)}\n\t\t\t{!hideStrengthBar && name === \"password\" && value && (\n\t\t\t\t<div className=\"strengthBarContainer mt-4\">\n\t\t\t\t\t<div className={`strengthBar ${strengthPass} br-20`}></div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n","import {createContext} from 'react'\n\nconst Store = createContext({});\n\nexport const ContextProvider = Store.Provider;\n\nexport default Store;\n","import React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  resetLoginUser,\n  getLoginUserSuccess\n} from \"../../actions/login\";\nimport { loginUser } from \"../../utils/userHelper\"\nimport Input from \"../../components/input\"\nimport Store from '../../utils/store'\n\nconst LoginPage = (props) => {\n  const [, dispatch] = useContext(Store)\n  const [userDetails, setUserDetails] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const[submitted, setSubmitted] = useState(false)\n  const [validateObj, setValidatObj]= useState({\n    username: false,\n    password: false \n  })\n  const[loginResp, setLoginResp] = useState(null)\n  const passwordRef = useRef(null);\n  const userNameRef = useRef(null);\n  useEffect(() => {\n    let userData = null;\n    if (typeof Storage !== \"undefined\") {\n      userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    }\n    const { email } = userData || {};\n    if (email) {\n      props.history.push(\"/\");\n    }\n  }, [props.history]);\n  useEffect(()=>{\n    if(loginResp){\n      dispatch(getLoginUserSuccess(loginResp))\n      props.history.push(\"/\");\n    }\n  },[loginResp])\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUserDetails({...userDetails, [name]: value });\n    setValidatObj({...validateObj, [name]:false})\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n    const { username, password } = userDetails;\n    setValidatObj({\n      username: !username,\n    password: !password \n    })\n    if (username && password) {\n      const userData = {\n        userDocument: { loginId: username, password: password },\n      };\n      loginUser(\n        userData,\n        setLoginResp,\n        setValidatObj\n      );\n    }\n  };\n\n  const resetLogin = () => {\n    resetLoginUser();\n  };\n  return (\n    <div className=\"pr-16 pl-16 wt-100p hCenter p-relative max-wt-500\">\n      <div className=\"flex flex-middle flex-between\">\n        <h2>Login</h2>\n        <Link to=\"/register\" onClick={resetLogin} className=\"btn btn-link\">\n          Register\n        </Link>\n      </div>\n      <form name=\"form\" onSubmit={handleSubmit}>\n      <Input\n            label=\"Email Id\"\n            type=\"email\"\n            ref={userNameRef}\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"username\"\n            value={userDetails.username}\n            onChange={handleChange}\n            hasError={validateObj.username}\n            errMsg={submitted && !userDetails.username?\"Email id is required\":\"Not a Registered user Register now\"}\n          />\n          <Input\n            label=\"Password\"\n            type=\"password\"\n            ref={passwordRef}\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"password\"\n            value={userDetails.password}\n            onChange={handleChange}\n            hasError={validateObj.password}\n            errMsg={submitted && !userDetails.password?\"Password is required\":\"Password did not matched with Email Id\"}\n            hideStrengthBar={true}\n          />\n        <div className=\"mb-16\">\n          <button className=\"btn btn-primary\">Login</button>\n          <Link to=\"/\" className=\"btn btn-link\">\n            cancel\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getRegisterUserSuccess\n} from \"../../actions/register\";\nimport { validatePassword } from \"../../utils\";\nimport { registerUser } from \"../../utils/userHelper\"\nimport Input from \"../../components/input\"\nimport Store from '../../utils/store'\n\nconst RegisterPage = (props) => {\n  const [, dispatch] = useContext(Store)\n  const [userDetails, setUserDetails] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    loginId: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  const [strengthPass, setStrengthPass] = useState(\"\");\n  const [registerResp, setRegisterResp] = useState(null)\n  const [validateObj, setValidatObj]= useState({\n    firstName: false ,\n    lastName: false ,\n    loginId: false ,\n    password: false \n  })\n  const passwordRef = useRef(null);\n\n  useEffect(() => {\n    let userData = null;\n    if (typeof Storage !== \"undefined\") {\n      userData = JSON.parse(sessionStorage.getItem(\"userData\"));\n    }\n    const { email } = userData || {};\n    if (email) {\n      props.history.push(\"/\");\n    }\n  }, [props.history]);\n\n  useEffect(()=>{\n    if(registerResp) {\n      dispatch(getRegisterUserSuccess(registerResp))\n      props.history.push(\"/\");\n    } \n  },[registerResp])\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"password\") {\n      const strengthPass = validatePassword(\n        value,\n        userDetails.firstName,\n        userDetails.loginId\n      );\n      setStrengthPass(strengthPass);\n    }\n    setValidatObj({...validateObj, [name]:false})\n    setUserDetails({ ...userDetails, [name]: value });\n    submitted && setSubmitted(false);\n    console.log(strengthPass);\n  };\n\n  const passwordFocused = () => {\n    console.log(\"passwordFocused\");\n    setStrengthPass(strengthPass || \"weak\");\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setSubmitted(true);\n    setValidatObj({\n      firstName: !userDetails.firstName ,\n    lastName: false ,\n    loginId: !userDetails.loginId ,\n    password: !userDetails.password \n    })\n    if (userDetails.firstName && userDetails.loginId && userDetails.password) {\n      const userData = { userDocument: userDetails };\n      registerUser(\n        userData,\n        setRegisterResp,\n        setValidatObj\n      );\n    }\n  };\n  return (\n    <div className=\"pr-16 pl-16 wt-100p hCenter p-relative max-wt-500\">\n      <div className=\"flex flex-middle flex-between\">\n        <h2>Register</h2>\n        <Link to=\"/login\" className=\"btn btn-link\">\n          {\" \"}\n          LogIn\n        </Link>\n      </div>\n\n      <form name=\"form\" onSubmit={handleSubmit}>\n          <Input\n            label=\"First Name\"\n            type=\"text\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"firstName\"\n            value={userDetails.firstName}\n            onChange={handleChange}\n            hasError={validateObj.firstName}\n            errMsg=\"First Name is required\"\n          />\n          <Input\n            label=\"Last Name\"\n            type=\"text\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"lastName\"\n            value={userDetails.lastName}\n            onChange={handleChange}\n          />\n          <Input\n            label=\"Email Id\"\n            type=\"email\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"loginId\"\n            value={userDetails.loginId}\n            onChange={handleChange}\n            hasError={validateObj.loginId}\n            errMsg={submitted && !userDetails.loginId?\"Email id is required\":\"Already have an id login now\"}\n          />\n          <Input\n            ref={passwordRef}\n            label=\"Password\"\n            type=\"password\"\n            inputContainerClass=\"mb-16\"\n            className=\"form-input\"\n            name=\"password\"\n            value={userDetails.password}\n            onChange={handleChange}\n            hasError={validateObj.password}\n            onFocus={passwordFocused}\n            errMsg=\"Password is required\"\n            strengthPass={strengthPass}\n          />\n        <div className=\"mb-16\">\n          <button className=\"btn btn-primary\">Register</button>\n          <Link to=\"/\" className=\"btn btn-link\">\n            Cancel\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","export const GET_REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\n\nexport const getRegisterUserSuccess = userData => {\n\tconsole.log(\"getRegisterUserSuccess\");\n\treturn {\n\t\ttype: GET_REGISTER_USER_SUCCESS,\n\t\tdata: userData\n\t};\n};","\nexport const validatePassword = (password, firstName, loginId) => {\n\tconst strongRegex = /^(?=.*[\\d])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&])[\\w!@#$%^&*]{8,}$/;\n\tconst normalRegex = /^(?=.*[\\d])(?=.*[a-z])(?=.*[!@#$%^&])[\\w!@#$%^&*]{6,}$/;\n\tif (firstName && password.includes(firstName)) {\n\t\treturn \"weak\";\n\t}\n\tif (loginId && password.includes(loginId)) {\n\t\treturn \"weak\";\n\t}\n\tif (strongRegex.test(password)) {\n\t\treturn \"strong\";\n\t}\n\tif (normalRegex.test(password)) {\n\t\treturn \"normal\";\n\t}\n\treturn \"weak\";\n};\n\nexport const isValidDate = (date) => {\n\tif (!date || typeof(date) !== \"string\") {\n\t\treturn false;\n\t} else if (isNaN(new Date(date).getTime())) {\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const path = (p, o) => {\n\tconst reducerFunction = (xs, x) => {\n\t\treturn xs && xs[x] ? xs[x] : null;\n\t};\n\treturn p.reduce(reducerFunction, o);\n};","import React, {useContext} from \"react\";\nimport Store from \"../../utils/store\";\nconst Home = ()=>{\n\tconst [appStore] = useContext(Store);\n\treturn(<div>{JSON.stringify(appStore, undefined, 2)}</div>);\n};\n\nexport default Home;","import React, { useContext, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport \"./styles/index.scss\";\nimport Login from \"./pages/login\";\nimport Register from \"./pages/register\";\nimport HomePage from \"./pages/home\";\nimport {\n\tgetLoginUserSuccess\n} from \"./actions/login\";\nimport Store from \"./utils/store\";\n\nconst Routes =() => {\n\tconst [, dispatch] = useContext(Store);\n\tuseEffect(()=>{\n\n\t\tlet userData = null;\n\t\tif (typeof Storage !== \"undefined\") {\n\t\t\tuserData = JSON.parse(sessionStorage.getItem(\"userData\"));\n\t\t}\n\t\tconst { email } = userData || {};\n\t\tif (email) {\n\t\t\tdispatch(getLoginUserSuccess(userData));\n\t\t}\n\t},[]);\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t</Switch>\n\t);\n};\nexport default Routes;","import {\n    GET_LOGIN_USER_SUCCESS,\n    RESET_LOGIN_USER\n} from \"../actions/login\";\nimport {\n    GET_REGISTER_USER_SUCCESS,\n} from \"../actions/register\";\nexport default (state, action) => {\n    let newState;\n    if (action.type === GET_LOGIN_USER_SUCCESS) {\n        newState = {\n            ...state,\n            loginStatus: true,\n            data: action.data,\n            submission: 'success'\n\n        }\n        if (typeof (Storage) !== \"undefined\") {\n            sessionStorage.setItem(\"userData\", JSON.stringify(action.data));\n        }\n    } else if (action.type === GET_REGISTER_USER_SUCCESS) {\n        newState = {\n            ...state,\n            loginStatus: true,\n            data: action.data,\n            submission: 'success'\n        }\n        if (typeof (Storage) !== \"undefined\") {\n            sessionStorage.setItem(\"userData\", JSON.stringify(action.data));\n        }\n    } else if (action.type === RESET_LOGIN_USER) {\n        newState = {\n            ...state,\n            loginStatus: false,\n        }\n    }\n    return newState || state;\n}","import loginReducer from \"../../reducer/loginUser.js\";\nconst mainReducer = (initialState, action)=>{\n\treturn({\n\t\tuser: loginReducer(initialState.user, action)\n\t});\n};\n\nexport default mainReducer;","import React,{useReducer} from \"react\";\nimport {ContextProvider} from \"./index\";\nimport reducer from \"./combineReducer\";\n\nconst initialState = {user:{} };\n\nconst StoreProvider = (props) =>{\n\treturn <ContextProvider value={useReducer(reducer, initialState)}>\n\t\t{props.children}\n\t</ContextProvider>;\n};\nexport default StoreProvider;","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Routes from \"./Routes\";\nimport \"./styles/index.scss\";\nimport StoreProvider from \"./utils/store/contextProvider\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<HashRouter basename=\"/\">\n\t\t\t\t<StoreProvider>\n\n\t\t\t\t\t<Routes />\n\t\t\t\t</StoreProvider>\n\t\t\t</HashRouter>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}